#启动端口号,eureka配置
spring.application.name=shoyiiDoctor-client
server.port=2002
eureka.client.serviceUrl.defaultZone=http://localhost:1001/eureka/
feign.hystrix.enabled=true

spring.thymeleaf.cache=false
spring.mvc.static-path-pattern=/static/**
#spring.devtools.restart.enabled=true
#spring.devtools.restart.additional-paths=src/main/java

#-------------------------------------------------------------------------------------------

#mysql数据库连接信息相关配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/medical_treatment?serverTimezone=UTC&useSSL=false
spring.datasource.username=root
spring.datasource.password=admin

#-------------------------------------------------------------------------------------------
#druid配置
# 指定数据库类型 mysql
spring.datasource.druid.db-type=mysql
# 启动初始化连接数量
spring.datasource.druid.initial-size=5
# 最小空闲连接
spring.datasource.druid.min-idle=5
# 最大连接数量（包含使用中的和空闲的）
spring.datasource.druid.max-active=20
# 最大连接等待时间 ，超出时间报错
spring.datasource.druid.time-between-eviction-runs-millis=6000
# 验证连接有效性的sql
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
# 使用中是否校验有效性
spring.datasource.druid.test-on-borrow=false
# 归还连接池时是否校验
spring.datasource.druid.test-on-return=false
# mysql 不推荐打开预处理连接池
spring.datasource.druid.pool-prepared-statements=false
# 设置过滤器 stat用于接收状态，wall防止sql注入，logback说明使用logback进行日志输出
spring.datasource.druid.filters=stat,wall,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connectionProperties=druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000

#-------------------------------------------------------------------------------------------

#映射文件位置，实体类和映射都用逗号隔开
mybatis.type-aliases-package=com.shoyii.doctor.entity
mybatis.mapperLocations=classpath:sql/base/*.xml,classpath:sql/extension/*.xml

#-------------------------------------------------------------------------------------------

#日志相关配配置
#logging.path=/Users/chentian/Desktop/shoyiiTest/tempLog
#logging.file=springbootdemo.log
#logging.pattern.console=%d{yyyy/MM/dd-HH:mm:ss} [%thread] %-5level %logger- %msg%n
#logging.pattern.file=%d{yyyy/MM/dd-HH:mm} [%thread] %-5level %logger- %msg%n

#-------------------------------------------------------------------------------------------

# Redis相关
# Redis数据库索引（默认为0）
spring.redis.database=2
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=5000

#-------------------------------------------------------------------------------------------

# 微信短信相关服务
wx.msg.appid=1400189068
wx.msg.appkey=85bbb50724a061f1a0c531d730770adc

# 路径相关属性
server-url=http://192.168.100.10:8081/medical-treatment-doctor
upload-path=E:/temp/medicalTreatment
ueditor.uploading.url=E:/temp/medicalTreatment/ueditor
ueditor.visit.url=/upload/
ueditor.resource.url=http://127.0.0.1:8081

#-------------------------------------------------------------------------------------------
# 线程池配置
thread.core.pool.size=2
max.pool.size=5
queue.capacity=2
keep.alive.seconds=3000